{"version":3,"sources":["Custom comp/Navbar.js","Custom comp/TextForm.js","Custom comp/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","tittle","type","id","role","onClick","toggleMode","htmlFor","TextForm","useState","text","setText","style","color","heading","value","onChange","event","console","log","target","backgroundColor","rows","newText","toUpperCase","showAlert","split","length","Alert","alert","word","lower","toLowerCase","charAt","slice","capitalize","msg","App","setMode","setAlert","message","setTimeout","document","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.45b1f13b.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n// import {Link} from 'react-router-dom'\r\n\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n        <nav className={`navbar navbar-expand-lg navbar- ${props.mode} bg-${props.mode}`}>\r\n        <div className=\"container-fluid\">\r\n          {/* <Link className=\"navbar-brand\" to=\"/\">{props.tittle}</Link> */}\r\n          <a className=\"navbar-brand\" href=\"#\">{props.tittle}</a>\r\n          <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <li className=\"nav-item\">\r\n                {/* <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link> */}\r\n                <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n              </li>\r\n              {/* <li className=\"nav-item\">\r\n                <Link className=\"nav-link\" to=\"/about\">About</Link>\r\n              </li> */}\r\n              <li className=\"nav-item dropdown\">\r\n                <a className=\"nav-link dropdown-toggle\" href=\"/\" id=\"navbarDropdown\" role=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n                  Services\r\n                </a>\r\n                <ul className=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\r\n                  <li><a className=\"dropdown-item\" href=\"/\">Action</a></li>\r\n                  <li><a className=\"dropdown-item\" href=\"/\">Another action</a></li>\r\n                  <li><hr className=\"dropdown-divider\"></hr></li>\r\n                  <li><a className=\"dropdown-item\" href=\"/\">Something else here</a></li>\r\n                </ul>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link disabled\" href=\"/\"> </a>\r\n              </li>\r\n            </ul>\r\n            \r\n            <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n  <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" id=\"flexSwitchCheckDefault\"/>\r\n  <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable Dark Mode</label>\r\n         </div>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    )\r\n}\r\n","import React, { useState } from \"react\";\r\n\r\nexport default function TextForm(props) {\r\n  const handleUpClick = () => {\r\n    //console.log(\"Uppercase was fired\" + text);\r\n    let newText = text.toUpperCase();\r\n    setText(newText);\r\n    props.showAlert(\"Converted to uppercase!\", \"success\");\r\n  }\r\n\r\n  const handleOnChange = (event) => {\r\n    console.log(\"On Change\");\r\n    setText(event.target.value);\r\n  }\r\n\r\n  const [text, setText] = useState(\"Enter text here\");\r\n  //setText(\"New\");\r\n  return (\r\n    <>\r\n      <div\r\n        className=\"container\"\r\n        style={{ color: props.mode === \"dark\" ? \"white\" : \"#042743\" }}\r\n      >\r\n        <h1>{props.heading} </h1>\r\n        <div className=\"mb-3\">\r\n          <textarea\r\n            className=\"form-control\"\r\n            value={text}\r\n            onChange={handleOnChange}\r\n            style={{\r\n              backgroundColor: props.mode === \"dark\" ? \"grey\" : \"white\",\r\n              color: props.mode === \"dark\" ? \"white\" : \"#042743\",\r\n            }}\r\n            id=\"myBox\"\r\n            rows=\"8\"\r\n          ></textarea>\r\n        </div>\r\n        <button className=\"btn btn-primary\" onClick={handleUpClick}>\r\n          Convert to uppercase\r\n        </button>\r\n      </div>\r\n      <div\r\n        className=\"container\"\r\n        style={{ color: props.mode === \"dark\" ? \"white\" : \"#042743\" }}\r\n      >\r\n        <h1>Your text Summary</h1>\r\n        <p>\r\n          {text.split(\" \").length} words and {text.length} characters\r\n        </p>\r\n        <h2>Preview</h2>\r\n        <p>{text}</p>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nfunction Alert(props) {\r\n    const capitalize = (word)=>{\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    }\r\n  return (\r\n    props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n     <strong>{capitalize(props.alert.type)}</strong>: {props.alert.msg}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Alert;\r\n","import './App.css';\nimport Navbar from './Custom comp/Navbar';\nimport TextForm from './Custom comp/TextForm';\n// import About from './Custom comp/About';\nimport React, { useState } from 'react'\nimport Alert from './Custom comp/Alert';\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route,\n//   Link\n// } from \"react-router-dom\";\n\n\nfunction App() {\n  const [mode , setMode] = useState('light');\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, type)=>{\n    setAlert({\n      msg: message,\n      type: type\n    })\n    setTimeout(() => {\n        setAlert(null);\n    }, 1500);\n}\n  const toggleMode = ()=>{\n    if ( mode === 'light'){\n    setMode('dark');\n    document.body.style.backgroundColor = '#042743' ;\n    showAlert(\"Dark mode enabled\" , \"success\");\n    }\n    else {\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"Light mode enabled\" , \"success\");\n    }\n  }\n  return (\n    <>\n    {/* <Router> */}\n    <Navbar tittle=\"W-Counter\" mode = {mode} toggleMode = {toggleMode}/>\n    <Alert alert={alert}/>\n      <div className=\"container my-3 \" >\n        {/* <Switch> */}\n          {/* <Route exact path=\"/about\">\n            <About />\n            </Route> */}\n            {/* <Route exact path=\"/\"> */}\n            <TextForm showAlert={showAlert} heading = \"Enter your text to analyze\" mode = {mode}/>\n          {/* </Route> */}\n        {/* </Switch> */}\n      </div>\n     {/* </Router> */}\n      \n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}